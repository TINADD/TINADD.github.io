(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{289:function(t,n,e){"use strict";e.r(n);var s=e(0),o=Object(s.a)({},function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("'''\nDefinition for singly-linked list.\nclass ListNode:\ndef "),n("strong",[this._v("init")]),this._v("(self, x):\nself.val = x\nself.next = None\n'''\nclass Solution:\ndef swapPairs(self, head: ListNode) -> ListNode:\nif head is None or head.next is None: #先判断边界情况\nreturn head\nslow = head\nfast,slow.next.next,head = slow.next.next,slow,head.next #先确定结果链表的第一个\nwhile fast is not None and fast.next is not None: #存在还能交换的节点对\nfast.next.next,slow.next,slow,fast = fast,fast.next,fast,fast.next.next  #python 逗号表达式，通过指针变换来交换节点对，但尾指针还没更新要在下一循环更新\nslow.next = fast#更新尾指针\nreturn head")]),this._v(" "),n("p",[this._v("思路：指针指来指去。")])])},[],!1,null,null,null);n.default=o.exports}}]);