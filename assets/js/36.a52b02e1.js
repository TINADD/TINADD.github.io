(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{284:function(n,r,e){"use strict";e.r(r);var t=e(0),s=Object(t.a)({},function(){var n=this,r=n.$createElement,e=n._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("python提供了两个非常重要的功能**（异常处理、断言）**来处理python程序在运行中出现的异常和错误，可以使用该功能来调试python程序。")]),n._v(" "),e("p",[e("strong",[n._v("异常处理")])]),n._v(" "),e("p",[n._v("捕捉异常可以使用"),e("strong",[n._v("try/except")]),n._v("语句。")]),n._v(" "),e("p",[e("strong",[n._v("try/except")]),n._v("语句用来检测"),e("strong",[n._v("try语句块中的错误")]),n._v("，从而让"),e("strong",[n._v("except")]),n._v("语句"),e("strong",[n._v("捕获")]),n._v("异常信息并处理。")]),n._v(" "),e("p",[n._v("如果你不想在异常发生时结束你的程序，只需在try里捕获它。")]),n._v(" "),e("p",[n._v("以下为简单的"),e("em",[n._v("try....except...else")]),n._v("的语法：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("try:\n<语句>        #运行别的代码\nexcept <名字>：\n<语句>        #如果在try部份引发了'name'异常\nexcept <名字>，<数据>:\n<语句>        #如果引发了'name'异常，获得附加的数据\nelse:\n<语句>        #如果没有异常发生\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("h6",{attrs:{id:"try的工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#try的工作原理","aria-hidden":"true"}},[n._v("#")]),n._v(" try的工作原理")]),n._v(" "),e("p",[n._v("当开始一个try语句后，python就在当前程序的上下文中作标记，这样当异常出现时就可以回到这里，try子句先执行，接下来会发生什么依赖于执行时是否出现异常。")]),n._v(" "),e("ul",[e("li",[n._v("如果当try后的语句执行时发生异常，python就跳回到try并执行第一个匹配该异常的except子句，异常处理完毕，控制流就通过整个try语句（除非在处理异常时又引发新的异常）。")]),n._v(" "),e("li",[n._v("如果在try后的语句里发生了异常，却没有匹配的except子句，异常将被递交到上层的try，或者到程序的最上层（这样将结束程序，并打印默认的出错信息）。")]),n._v(" "),e("li",[n._v("如果在try子句执行时没有发生异常，python将执行else语句后的语句（如果有else的话），然后控制流通过整个try语句。")])]),n._v(" "),e("p",[e("strong",[n._v("使用except而不带任何异常类型")])]),n._v(" "),e("p",[n._v("你可以不带任何异常类型使用except，如下实例：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("try:\n    正常的操作\n   ......................\nexcept:\n    发生异常，执行这块代码\n   ......................\nelse:\n    如果没有异常执行这块代码\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("p",[e("strong",[n._v("以上方式try-except语句捕获所有发生的异常。但这不是一个很好的方式，我们不能通过该程序识别出具体的异常信息。因为它捕获所有的异常。")])]),n._v(" "),e("h2",{attrs:{id:"使用except而带多种异常类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用except而带多种异常类型","aria-hidden":"true"}},[n._v("#")]),n._v(" 使用except而带多种异常类型")]),n._v(" "),e("p",[n._v("也可以使用相同的except语句来处理多个异常信息，如下所示：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("try:\n    正常的操作\n   ......................\nexcept(Exception1[, Exception2[,...ExceptionN]]]):\n   发生以上多个异常中的一个，执行这块代码\n   ......................\nelse:\n    如果没有异常执行这块代码\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("h2",{attrs:{id:"try-finally-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#try-finally-语句","aria-hidden":"true"}},[n._v("#")]),n._v(" try-finally 语句")]),n._v(" "),e("p",[n._v("try-finally 语句无论是否发生异常都将执行最后的代码。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("try:\n<语句>\nfinally:\n<语句>    #退出try时总会执行\nraise\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("h2",{attrs:{id:"异常的参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异常的参数","aria-hidden":"true"}},[n._v("#")]),n._v(" 异常的参数")]),n._v(" "),e("p",[n._v("一个异常可以带上参数，可作为输出的异常信息参数。")]),n._v(" "),e("p",[n._v("你可以通过except语句来捕获异常的参数，如下所示：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("try:\n    正常的操作\n   ......................\nexcept ExceptionType, Argument:\n    你可以在这输出 Argument 的值...\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("h3",{attrs:{id:"触发异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#触发异常","aria-hidden":"true"}},[n._v("#")]),n._v(" 触发异常")]),n._v(" "),e("p",[n._v("我们可以使用raise语句自己触发异常")]),n._v(" "),e("p",[n._v("raise语法格式如下：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("raise [Exception [, args [, traceback]]] \n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("语句中 Exception 是异常的类型（例如，NameError）参数标准异常中任一种，args 是自已提供的异常参数。")]),n._v(" "),e("p",[n._v("最后一个参数是可选的（在实践中很少使用），如果存在，是跟踪异常对象。")]),n._v(" "),e("p",[n._v("内置异常类的层次结构如下：")]),n._v(" "),e("pre",[e("code",[n._v(" BaseException  # 所有异常的基类\n\n +-- SystemExit  # 解释器请求退出\n\n +-- KeyboardInterrupt  # 用户中断执行(通常是输入^C)\n\n +-- GeneratorExit  # 生成器(generator)发生异常来通知退出\n\n +-- Exception  # 常规异常的基类\n \n +-- StopIteration  # 迭代器没有更多的值\n\n  +-- StopAsyncIteration  # 必须通过异步迭代器对象的__anext__()方法引发以停止迭代\n\n  +-- ArithmeticError  # 各种算术错误引发的内置异常的基类\n\n  |    +-- FloatingPointError  # 浮点计算错误\n\n  |    +-- OverflowError  # 数值运算结果太大无法表示\n\n  |    +-- ZeroDivisionError  # 除(或取模)零 (所有数据类型)\n\n  +-- AssertionError  # 当assert语句失败时引发\n\n  +-- AttributeError  # 属性引用或赋值失败\n\n  +-- BufferError  # 无法执行与缓冲区相关的操作时引发\n\n  +-- EOFError  # 当input()函数在没有读取任何数据的情况下达到文件结束条件(EOF)时引发\n\n  +-- ImportError  # 导入模块/对象失败\n\n  |    +-- ModuleNotFoundError  # 无法找到模块或在在sys.modules中找到None\n\n  +-- LookupError  # 映射或序列上使用的键或索引无效时引发的异常的基类\n\n  |    +-- IndexError  # 序列中没有此索引(index)\n\n  |    +-- KeyError  # 映射中没有这个键\n\n  +-- MemoryError  # 内存溢出错误(对于Python 解释器不是致命的)\n\n  +-- NameError  # 未声明/初始化对象 (没有属性)\n\n  |    +-- UnboundLocalError  # 访问未初始化的本地变量\n\n  +-- OSError  # 操作系统错误，EnvironmentError，IOError，WindowsError，socket.error，select.error和mmap.error已合并到OSError中，构造函数可能返回子类\n\n  |    +-- BlockingIOError  # 操作将阻塞对象(e.g. socket)设置为非阻塞操作\n\n  |    +-- ChildProcessError  # 在子进程上的操作失败\n\n  |    +-- ConnectionError  # 与连接相关的异常的基类\n\n  |    |    +-- BrokenPipeError  # 另一端关闭时尝试写入管道或试图在已关闭写入的套接字上写入\n\n  |    |    +-- ConnectionAbortedError  # 连接尝试被对等方中止\n\n  |    |    +-- ConnectionRefusedError  # 连接尝试被对等方拒绝\n\n  |    |    +-- ConnectionResetError    # 连接由对等方重置\n\n  |    +-- FileExistsError  # 创建已存在的文件或目录\n\n  |    +-- FileNotFoundError  # 请求不存在的文件或目录\n\n  |    +-- InterruptedError  # 系统调用被输入信号中断\n\n  |    +-- IsADirectoryError  # 在目录上请求文件操作(例如 os.remove())\n\n  |    +-- NotADirectoryError  # 在不是目录的事物上请求目录操作(例如 os.listdir())\n\n  |    +-- PermissionError  # 尝试在没有足够访问权限的情况下运行操作\n\n  |    +-- ProcessLookupError  # 给定进程不存在\n\n  |    +-- TimeoutError  # 系统函数在系统级别超时\n\n  +-- ReferenceError  # weakref.proxy()函数创建的弱引用试图访问已经垃圾回收了的对象\n\n  +-- RuntimeError  # 在检测到不属于任何其他类别的错误时触发\n\n  |    +-- NotImplementedError  # 在用户定义的基类中，抽象方法要求派生类重写该方法或者正在开发的类指示仍然需要添加实际实现\n\n  |    +-- RecursionError  # 解释器检测到超出最大递归深度\n\n  +-- SyntaxError  # Python 语法错误\n\n  |    +-- IndentationError  # 缩进错误\n\n  |         +-- TabError  # Tab和空格混用\n\n  +-- SystemError  # 解释器发现内部错误\n\n  +-- TypeError  # 操作或函数应用于不适当类型的对象\n\n  +-- ValueError  # 操作或函数接收到具有正确类型但值不合适的参数\n\n  |    +-- UnicodeError  # 发生与Unicode相关的编码或解码错误\n\n  |         +-- UnicodeDecodeError  # Unicode解码错误\n\n  |         +-- UnicodeEncodeError  # Unicode编码错误\n\n  |         +-- UnicodeTranslateError  # Unicode转码错误\n\n  +-- Warning  # 警告的基类\n\n       +-- DeprecationWarning  # 有关已弃用功能的警告的基类\n\n       +-- PendingDeprecationWarning  # 有关不推荐使用功能的警告的基类\n\n       +-- RuntimeWarning  # 有关可疑的运行时行为的警告的基类\n\n       +-- SyntaxWarning  # 关于可疑语法警告的基类\n\n       +-- UserWarning  # 用户代码生成警告的基类\n\n       +-- FutureWarning  # 有关已弃用功能的警告的基类\n\n       +-- ImportWarning  # 关于模块导入时可能出错的警告的基类\n\n       +-- UnicodeWarning  # 与Unicode相关的警告的基类\n\n       +-- BytesWarning  # 与bytes和bytearray相关的警告的基类\n\n       +-- ResourceWarning  # 与资源使用相关的警告的基类。被默认警告过滤器忽略。\n")])])])},[],!1,null,null,null);r.default=s.exports}}]);